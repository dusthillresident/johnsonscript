/*
 =====================
 ====Drawing modes====
 =====================

 ==========  Quick reference, taken from X11/X.h  =============
 GXclear		0		 0 
 GXand			1		 src AND dst 
 GXandReverse		2		 src AND NOT dst 
 GXcopy			3		 src 
 GXandInverted		4		 NOT src AND dst 
 GXnoop			5		 dst 
 GXxor			6		 src XOR dst 
 GXor			7		 src OR dst 
 GXnor			8		 NOT src AND NOT dst 
 GXequiv		9		 NOT src XOR dst 
 GXinvert		10		 NOT dst 
 GXorReverse		11		 src OR NOT dst 
 GXcopyInverted		12		 NOT src 
 GXorInverted		13		 NOT src OR dst 
 GXnand			14		 NOT src OR NOT dst 
 GXset			15		 1 
*/

constant bdiameter 32;
constant bradius >> bdiameter 1;
constant pad 16;
constant pd2 / pad 2;
constant bgstep 8;

startgraphics ( + pad 16 * bdiameter 8  ) ( + pad * bdiameter 16 );

variable i;

while ! mouseb

 if expose
  drawmode 0
  cls
  background
  set i 0
  while < i 16
   REM ----
   drawmode i;
   drawballs (+ 16 pd2 bradius) (+ pd2 bradius * bdiameter i);
   REM ----
   drawmode 3; gcol -1;
   drawtext 4 (+ pd2 -8 bradius * bdiameter i) 1 str$i
   REM ----
   set i + i 1
  endwhile
 endif

 wait 16.6;

endwhile;

endfunction


function background local x y;
 drawmode 3;
 set x 0;
 while < x winw
  set y 0;
  while < y winh
   gcol (<< 127 * 8 % (+ x y) 3)
   rectanglef x y bgstep
   set y + y bgstep
  endwhile
  set x + x bgstep
 endwhile
endfunction


function drawballs x y local i;
 set i 0
 while < i 3
  gcol << 255 * 8 i;
  circlef (+ x * bdiameter i) y bradius
  set i + i 1
 endwhile
 set i 0
 while < i 5
  gcol ~ (<< 255 * 8 i);
  if = i 3
   gcol 0
  endif
  if = i 4
   gcol -1
  endif
  circlef (+ x (* bdiameter 3) * bdiameter i) y bradius
  set i + i 1
 endwhile
 drawmode 15
 gcol -1
 rectangle (- x bradius) (- y bradius) (* bdiameter 8) bdiameter;
endfunction